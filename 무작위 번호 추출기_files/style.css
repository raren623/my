<!DOCTYPE html>
<html lang="ko-KR">
<head>
<meta charset="UTF-8" />
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<script type="text/javascript">
/*<![CDATA[*/
_url_prefix="/moniwiki";
/*]]>*/
</script><meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=2.0, minimum-scale=0.5, user-scalable=yes" />
<meta name="google-site-verification" content="RhIQC5oPZx_lrNgWVHNl4BoE2DqoXvHqT9MsVgid-9M" />
<meta name="naver-site-verification" content="bf33173029e596bf5b29104d496c15e5c554b09f"/>
<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<meta http-equiv="Pragma" content="no-cache">
<meta property="fb:admins" content="100001700689885" />
<meta name="ROBOTS" content="INDEX,FOLLOW" />
<meta name="description" content="programming">
<meta property="og:type" content="website">
<meta property="og:title" content="MINZKN">
<meta property="og:description" content="programming">
<meta property="og:image" content="http://www.minzkn.com/favicon.ico">
<meta property="og:url" content="http://www.minzkn.com">
<link rel="Shortcut Icon" href="/favicon.ico" />
<link rel="sitemap" type="application/xml" title="Sitemap" href="?action=sitemap" />
<link rel="Start" href="Home" />
<link rel="Index" href="TitleIndex" />
<link rel="Help" href="HelpOnFormatting" />
<link rel="Copyright" href="SiteHistory" />
<link rel="Search" href="FindPage" />
<link rel="Glossary" href="WordIndex" />
<link rel="Alternate History" title="Page History" href="?action=info" />
<link rel="Alternate" title="xml" type="application/rss+xml" href="?action=rss_rc" />
<link rel="Alternate" title="Wiki Markup" type="text/plain" href="?action=raw" />
<!-- BEGIN: Google auto adsense -->
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({
          google_ad_client: "ca-pub-2110881342960271",
          enable_page_level_ads: true
     });
</script>
<!-- END: Google auto adsense --><meta name='viewport' content='width=device-width' />
<meta name="keywords" content="minzkn,hwport,programming,home,development,linux,software" />
<meta http-equiv="last-modified" content="Thu, 12 Dec 2019 12:47:18 GMT" />
<meta property="og:url" content="https://www.minzkn.com:443/moniwiki/wiki.php/Home" />
<meta property="og:site_name" content="MINZKN" />
<meta property="og:title" content="재혁이의 홈페이지" />
<meta property="og:type" content="website" />
<meta property="og:image" content="https://www.minzkn.com:443/moniwiki/imgs/moniwiki-logo.png" />
<meta property="og:description" content="[wiki:Home 대문] ---- [[Include(Title)]] 문서(Documents) |분류(Category)|[wiki:CategoryBasic 기초지식(Basic)] [wiki:CategoryInstall 설치 및 구축(Install)] [wiki:CategoryHowTo 활용(How..." />
<meta name="twitter:card" content="summary" />
<meta name="twitter:domain" content="MINZKN" />
<meta name="twitter:title" content="재혁이의 홈페이지">
<meta name="twitter:url" content="https://www.minzkn.com:443/moniwiki/wiki.php/Home">
<meta name="twitter:description" content="[wiki:Home 대문] ---- [[Include(Title)]] 문서(Documents) |분류(Category)|[wiki:CategoryBasic 기초지식(Basic)] [wiki:CategoryInstall 설치 및 구축(Install)] [wiki:CategoryHowTo 활용(How..." />
<meta name="twitter:image:src" content="https://www.minzkn.com:443/moniwiki/imgs/moniwiki-logo.png" />
<script type='application/ld+json'>
{"@context":"http://schema.org",
 "@type":"WebPage",
 "url":"https://www.minzkn.com:443/moniwiki/wiki.php/Home",
 "dateModified":"2019-12-12T12:47:18+00:00",
 "name":"재혁이의 홈페이지"
}
</script>
<meta name="description" content="[wiki:Home 대문] ---- [[Include(Title)]] 문서(Documents) |분류(Category)|[wiki:CategoryBasic 기초지식(Basic)] [wiki:CategoryInstall 설치 및 구축(Install)] [wiki:CategoryHowTo 활용(How..." />
  <title>재혁이의 홈페이지 - MINZKN</title>
  <link rel="canonical" href="https://www.minzkn.com:443/moniwiki/wiki.php/Home" />
  <link rel="Alternate" title="Wiki Markup" href="/moniwiki/wiki.php/Home?action=raw" />
  <link rel="Alternate" media="print" title="Print View" href="/moniwiki/wiki.php/Home?action=print" />
  <link rel="stylesheet" type="text/css" media="screen" href="/moniwiki/theme/minzkn/css/default.css?1534524423" />
</head>
<div><a id="top" name="top" accesskey="t"></a></div>
<!-- BEGIN: Google Analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-71446535-1', 'auto');
  ga('send', 'pageview');

</script>
<!-- END: Google Analytics -->
<!-- BEGIN: ? -->
<!-- END: ? -->
<div id='wikiBody' class='entry-content'>
<div id='wikiContent'>
<div id="aline-5"><a href='/moniwiki/wiki.php/Home' title="Home"  class="current">대문</a><span class='line-anchor' id='line-5'></span>
</div>
<div class='separator'><hr /></div><span class='line-anchor' id='line-6'></span>
<div id="aline-7"><div></div><span class='line-anchor' id='line-7'></span>
</div>
<div class="section"><h3 id="line-8"><a id='s-1'></a>문서(Documents)</h3><div id="sc-1">
<div id="aline-9"><div class="indent"><table cellspacing='0' class="wiki" >
<caption>분류(Category)</caption><tr  id="line-9"><td ><a href='/moniwiki/wiki.php/CategoryBasic' title="CategoryBasic" >기초지식(Basic)</a> </td><td ><a href='/moniwiki/wiki.php/CategoryInstall' title="CategoryInstall" >설치 및 구축(Install)</a> </td></tr>
<tr  id="line-10"><td ><a href='/moniwiki/wiki.php/CategoryHowTo' title="CategoryHowTo" >활용(HowTo)</a> </td><td ><strong><a href='/moniwiki/wiki.php/CategoryProgramming' title="CategoryProgramming" >프로그래밍(Programming)</a></strong> </td></tr>
<tr  id="line-11"><td ><a href='/moniwiki/wiki.php/CategoryHardware' title="CategoryHardware" >하드웨어(H/W)</a> </td><td ><strong><a href='/moniwiki/wiki.php/CategoryNetwork' title="CategoryNetwork" >네트웍(Network)</a></strong> </td></tr>
<tr  id="line-12"><td ><a href='/moniwiki/wiki.php/CategoryBroadcast' title="CategoryBroadcast" >방송(Broadcast)</a> </td><td ><a href='/moniwiki/wiki.php/CategoryOpenProject' title="CategoryOpenProject" >공개프로젝트(Project)</a> </td></tr>
<tr  id="line-13"><td ><a href='/moniwiki/wiki.php/CategoryReview' title="CategoryReview" >검토(Review)</a> </td><td ><a href='/moniwiki/wiki.php/TroubleShooting' title="TroubleShooting" >문제해결(TroubleShooting)</a> </td></tr>
<tr  id="line-14"><td ><a href='/moniwiki/wiki.php/CategorySnippets' title="CategorySnippets" >조각코드(Snippets)</a> </td><td class="right" > </td></tr>
<tr  id="line-15"><td class="center"  colspan='2'> &nbsp; </td></tr>
<tr  id="line-16"><td ><a href='/moniwiki/wiki.php/CategoryLink' title="CategoryLink" >유용한 링크(Link)</a> </td><td ><a href='/moniwiki/wiki.php/CategoryAny' title="CategoryAny" >기타 / 미분류(Misc)</a> </td></tr>
<tr  id="line-17"><td ><a href='/moniwiki/wiki.php/SiteHistory' title="SiteHistory" >사이트 역사(About)</a> </td><td ><a href='/moniwiki/wiki.php/FindPage' title="FindPage" >검색(Search)</a> </td></tr>
<tr  id="line-18"><td ><a href='/moniwiki/wiki.php/TitleIndex' title="TitleIndex" >모든 페이지(AllPages)</a> </td><td ><a href='/moniwiki/wiki.php/RecentChanges' title="RecentChanges" >바뀐글(RecentChanges)</a> </td></tr>
</table>
<br />
</div>
</div>
</div>
</div>
<div class="section"><h3 id="line-20"><a id='s-2'></a>서비스(Services)</h3><div id="sc-2">
<div id="aline-21"><ul><li><img class='url' alt='[https]' src='/moniwiki/imgs/https.png' /><a class='externalLink named'   href='https://www.minzkn.com/public/'>다운로드(Download)</a><span class='line-anchor' id='line-21'></span>
</li>
<li>안드로이드 앱(app)<span class='line-anchor' id='line-22'></span>
<ul><li><img class='url' alt='[https]' src='/moniwiki/imgs/https.png' /><a class='externalLink named'  target="_blank"   href='https://play.google.com/store/apps/details?id=com.minzkn.pgl.hwport'>hwport</a><img class='externalLink' src='/moniwiki/imgs/moni2/external.png' alt='[]' class='wikiIcon' /><span class='line-anchor' id='line-23'></span>
</li>
<li><img class='url' alt='[https]' src='/moniwiki/imgs/https.png' /><a class='externalLink named'  target="_blank"   href='https://play.google.com/store/apps/details?id=com.minzkn.pgl.fire'>fire</a><img class='externalLink' src='/moniwiki/imgs/moni2/external.png' alt='[]' class='wikiIcon' /><span class='line-anchor' id='line-24'></span>
</li>
</ul></li>
<li><img class='url' alt='[https]' src='/moniwiki/imgs/https.png' /><a class='externalLink named'  target="_blank"   href='https://www.minzkn.com/ip.php'>접속 브라우저의 공인 IP주소</a><img class='externalLink' src='/moniwiki/imgs/moni2/external.png' alt='[]' class='wikiIcon' /> (<img class='url' alt='[https]' src='/moniwiki/imgs/https.png' /><a class='externalLink named'  target="_blank"   href='https://www.minzkn.com/jsgetip.php'>JSONP 함수</a><img class='externalLink' src='/moniwiki/imgs/moni2/external.png' alt='[]' class='wikiIcon' />)<span class='line-anchor' id='line-25'></span>
</li>
<li><img class='url' alt='[https]' src='/moniwiki/imgs/https.png' /><a class='externalLink named'  target="_blank"   href='https://www.minzkn.com/random.html'>무작위번호 생성기(Random number generator)</a><img class='externalLink' src='/moniwiki/imgs/moni2/external.png' alt='[]' class='wikiIcon' /><span class='line-anchor' id='line-26'></span>
</li>
<li><img class='url' alt='[https]' src='/moniwiki/imgs/https.png' /><a class='externalLink named'  target="_blank"   href='https://www.minzkn.com/calculator.html'>초 간단 계산기(Calculator)</a><img class='externalLink' src='/moniwiki/imgs/moni2/external.png' alt='[]' class='wikiIcon' /><span class='line-anchor' id='line-27'></span>
<br />
<br />
</li>
</ul>
</div>
</div>
</div>
<div class="section"><h3 id="line-29"><a id='s-3'></a>상태정보 제공</h3><div id="sc-3">
<div id="aline-30"><ul><li>접속 브라우저 정보<span class='line-anchor' id='line-30'></span>
<div class="indent"><span class='line-anchor' id='line-31'></span>
<div id="d_hwport_show_layer">확인 중...</div>
<span class='line-anchor' id='line-33'></span>
</div></li>
</ul>
</div>
</div>
</div>
<!-- wikiContent --></div>
<!-- wikiBody --></div>
﻿<hr>
<!-- BEGIN: Google adsense -->
<div align="center">
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-2110881342960271"
     data-ad-slot="5704346399"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>
<br>
<!-- END: Google adsense -->
<!-- BEGIN: Google analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-71446535-1', 'auto');
  ga('send', 'pageview');
</script>
<!-- END: Google analytics --><br>
/*<br>[ <a href="/moniwiki/wiki.php/Home" ><span>대문</span></a>&nbsp;|&nbsp;<a href="/moniwiki/wiki.php/Home?action=print" rel="nofollow"><span>PrintView</span></a>&nbsp;|&nbsp;<a href="/moniwiki/wiki.php/Home?action=raw" rel="nofollow"><span>RawView</span></a>&nbsp;|&nbsp;<a href="/moniwiki/wiki.php/Home?action=rss_rc" rel="nofollow"><span>RSS</span></a> ]<br><br>
Copyright ⓒ <b><a href="//www.minzkn.com"><mark>MINZKN.COM</mark></a></b><br>
All Rights Reserved.<br>
<br>
<a href="//www.minzkn.com/" target="_top"><img src="/minzkn_banner_tm.png" border="0" alt="MINZKN"></a><br>
*/
<script type="text/javascript" src="/jsgetip.php"></script>
<script type="text/javascript">
function hwport_http_request() {
    if(Boolean(window.XMLHttpRequest)) { try { return new window.XMLHttpRequest(); } catch(e) {} }
    else { try { return new window.ActiveXObject("Microsoft.XMLHTTP"); } catch(e) {} }
    throw new Error("hwport_pgl.m_XMLHttpRequest not supported !");
    return null;
}
function hwport_xml_parser(s_string) {
    var s_xml;
    if(window.DOMParser) {
        var s_dom_parser;
        try {
            s_dom_parser = new window.DOMParser();
            s_xml = s_dom_parser.parseFromString(s_string, "text/xml");
            if(Boolean(s_xml)) { return s_xml; }
        } catch(e) {}
    }
    if(window.ActiveXObject) {
        try {
            s_xml = new window.ActiveXObject("Microsoft.XMLDOM");
            s_xml.async = false;
            s_xml.loadXML(s_string);
            if(Boolean(s_xml)) { return s_xml; }
        } catch(e) {}
    }
    throw new Error("hwport_pgl.m_xml_parser not supported !");
    return null;
}
var g_hwport_prev_cputick = null;
function hwport_cputick_viewer(s_data) {
    var s_this_element;
    var s_xml;
    var s_tag;
    var s_text;
    var s_cputick_temp;
    var s_cputick_index
    var s_cputick_count
    var s_cputick_name = null;
    var s_cputick_value = null;
    var s_cputick_diff = null;
    var s_cputick_total;
    var s_cputick_idle;
    var s_cputick_used;

    s_xml = hwport_xml_parser(s_data);
    if(!Boolean(s_xml)) { window.alert("not supported XML parser !"); return false; }

    s_this_element = document.getElementById("d_hwport_cpuusage_layer");
    if(!Boolean(s_this_element)) { window.alert("not found div !"); return false; }

    s_tag = s_xml.getElementsByTagName("cputick");
    if(!Boolean(s_tag) || !Boolean(s_tag[0]) || !Boolean(s_tag[0].childNodes)) { s_this_element.innerHTML = "CPU 사용률을 확인할 수 없습니다."; return false; }

    s_text = "";

    s_cputick_index = 0;
    s_cputick_name = new Array();
    s_cputick_value = new Array();
    s_cputick_diff = new Array();
    s_cputick_total = 0;
    s_cputick_idle = 0;
    s_cputick_used = 0;
    for(s_cputick_count = 0;s_cputick_count < s_tag[0].childNodes.length;s_cputick_count++) {
        try {
            if(s_tag[0].childNodes[s_cputick_count].nodeType != 1) { continue; }
            s_cputick_temp = s_tag[0].childNodes[s_cputick_count].nodeName;
            s_cputick_name.push(s_cputick_temp);
            s_cputick_temp = s_tag[0].childNodes[s_cputick_count].childNodes[0].nodeValue;
            s_cputick_value.push(s_cputick_temp);
            if(Boolean(g_hwport_prev_cputick) && (g_hwport_prev_cputick.length >= s_cputick_index)) {
                s_cputick_diff[s_cputick_index] = s_cputick_value[s_cputick_index] - g_hwport_prev_cputick[s_cputick_index];
            }
            else {
                s_cputick_diff[s_cputick_index] = 0;
            }
            s_cputick_temp = s_cputick_name[s_cputick_index].toLowerCase();
            if(s_cputick_temp == "total") { s_cputick_total += s_cputick_diff[s_cputick_index]; }
            else if(s_cputick_temp == "idle") { s_cputick_idle += s_cputick_diff[s_cputick_index]; }
            else { s_cputick_used += s_cputick_diff[s_cputick_index]; }
            ++s_cputick_index
        } catch(e) {
            s_text += "oops" + s_cputick_index + "<br />"
            break;
        }
    }
    s_text += "<table>";
    s_text += "<caption>주 서버의 실시간 CPU 사용률</caption>";
    for(s_cputick_index = 0;s_cputick_index < s_cputick_name.length;s_cputick_index++) {
        s_cputick_temp = s_cputick_name[s_cputick_index].toLowerCase();
        if(s_cputick_temp == "total") {
            s_text += "<th align='center'>" + "CPU 사용률" + "</th>";
        }
        else {
            s_text += "<th align='center'>&nbsp;" + s_cputick_temp + "&nbsp;</th>";
        }
    }
    s_text += "<tr>";
    for(s_cputick_index = 0;s_cputick_index < s_cputick_value.length;s_cputick_index++) {
        s_cputick_temp = s_cputick_name[s_cputick_index].toLowerCase();
        if(s_cputick_total <= 0) {
            s_text += "<td align='right'>" + "-" + "</td>";
        }
        else if(s_cputick_temp == "total") {
            s_text += "<td align='right'><b>" + Math.round(((s_cputick_used * 100) / s_cputick_total)) + "%</b></td>";
        }
        else {
            s_text += "<td align='right'>" + Math.round(((s_cputick_diff[s_cputick_index] * 100) / s_cputick_total)) + "%</td>";
        }
    }
    s_text += "</tr></table><br />";

    s_this_element.innerHTML = s_text;

    g_hwport_prev_cputick = s_cputick_value;

    return true;
}

/**
 * Get the user IP throught the webkitRTCPeerConnection
 * @param onNewIP {Function} listener function to expose the IP locally
 * @return undefined
 */
function getUserIP(onNewIP) { //  onNewIp - your listener function for new IPs
    //compatibility for firefox and chrome
    var myPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;
    if(!myPeerConnection) {
        return;
    }
    var pc = new myPeerConnection({
        iceServers: []
    }),
    noop = function() {},
    localIPs = {},
    ipRegex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/g,
    key;

    function iterateIP(ip) {
        if (!localIPs[ip]) onNewIP(ip);
        localIPs[ip] = true;
    }

     //create a bogus data channel
    pc.createDataChannel("");

    // create offer and set local description
    pc.createOffer().then(function(sdp) {
        sdp.sdp.split('\n').forEach(function(line) {
            if (line.indexOf('candidate') < 0) return;
            line.match(ipRegex).forEach(iterateIP);
        });
        
        pc.setLocalDescription(sdp, noop, noop);
    }).catch(function(reason) {
        // An error occurred, so handle the failure to connect
    });

    //listen for candidate events
    pc.onicecandidate = function(ice) {
        if (!ice || !ice.candidate || !ice.candidate.candidate || !ice.candidate.candidate.match(ipRegex)) return;
        ice.candidate.candidate.match(ipRegex).forEach(iterateIP);
    };
}

window.addEventListener("load", function () {
    var s_element_this;
    s_element_this = document.getElementById("d_hwport_show_layer");
    if(Boolean(s_element_this)) {
        var s_text;

	s_text = "";
	s_text += "<table>";
	s_text += "<caption>접속 브라우저 정보</caption>";
	s_text += "<th align='centor'>항목</th><th align='centor'>내용</th>";
	if(Boolean(navigator.appCodeName)) { s_text += "<tr><td>CodeName</td><td>" + navigator.appCodeName + "</td></tr>"; }
	if(Boolean(navigator.appName)) { s_text += "<tr><td>Name</td><td>" + navigator.appName + "</td></tr>"; }
	if(Boolean(navigator.appVersion)) { s_text += "<tr><td>Version</td><td>" + navigator.appVersion + "</td></tr>"; }
	if(Boolean(navigator.cookieEnabled)) { s_text += "<tr><td>CookieEnabled</td><td>" + navigator.cookieEnabled + "</td></tr>"; }
	if(Boolean(navigator.geolocation)) { s_text += "<tr><td>Geo-location</td><td>" + "<div id=\"d_hwport_geolocation\">Supported</div>" + "</td></tr>"; }
	else { s_text += "<tr><td>geolocation</td><td>" + "Not supported" + "</td></tr>"; }
	if(Boolean(navigator.systemLanguage)) { s_text += "<tr><td>System language</td><td>" + navigator.systemLanguage + "</td></tr>"; }
	if(Boolean(navigator.language)) { s_text += "<tr><td>Browser language</td><td>" + navigator.language + "</td></tr>"; }
	if(Boolean(navigator.onLine)) { s_text += "<tr><td>On-Line</td><td>" + navigator.onLine + "</td></tr>"; }
	if(Boolean(navigator.platform)) { s_text += "<tr><td>Platform</td><td>" + navigator.platform + "</td></tr>"; }
	if(Boolean(navigator.product)) { s_text += "<tr><td>Product</td><td>" + navigator.product + "</td></tr>"; }
	if(Boolean(navigator.userAgent)) { s_text += "<tr><td>User-Agent header</td><td>" + navigator.userAgent + "</td></tr>"; }
	if(Boolean(screen.width) && Boolean(screen.height) && Boolean(screen.colorDepth)) { s_text += "<tr><td>Screen total resolution</td><td>" + screen.width + " x " + screen.height + " (" + screen.colorDepth + "bpp)" + "</td></tr>"; }
	if(Boolean(screen.availWidth) && Boolean(screen.availHeight)) { s_text += "<tr><td>Screen avail resolution</td><td>" + screen.availWidth + " x " + screen.availHeight + "</td></tr>"; }
	if(Boolean(window.innerWidth) && Boolean(window.innerHeight)) { s_text += "<tr><td>Window resolution</td><td>" + window.innerWidth + " x " + window.innerHeight + "</td></tr>"; }
	if(Boolean(document.documentURI)) { s_text += "<tr><td>URL</td><td>" + "<a href=\"" + document.documentURI + "\" target=\"_top\">" + document.documentURI + "</a>" + "</td></tr>"; }
	if(Boolean(window.location.hostname)) { s_text += "<tr><td>Hostname of a URL</td><td>" + window.location.hostname + "</td></tr>"; }
	if(Boolean(window.location.port)) { s_text += "<tr><td>Port number the server uses for a URL</td><td>" + window.location.port + "</td></tr>"; }
	if(Boolean(window.location.search)) { s_text += "<tr><td>Query of a URL</td><td>" + window.location.search + "</td></tr>"; }
	if(Boolean(window.location.pathname)) { s_text += "<tr><td>Pathname of a URL</td><td>" + window.location.pathname + "</td></tr>"; }
	if(Boolean(document.referrer)) { s_text += "<tr><td>URL of the document that loaded the current document</td><td>" + "<a href=\"" + document.referrer + "\" target=\"_top\">" + document.referrer + "</a>" + "</td></tr>"; }
	s_text += "<tr><td>Your IP address</td><td>" + "<div id=\"d_hwport_local_ip\">" + hwport_getip() + "</div>" + "</td></tr>";
	s_text += "</table>";
   
/* 
	if(Boolean(navigator.geolocation)) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var s_element_this_geolocation;
                s_element_this_geolocation = document.getElementById("d_hwport_geolocation");
                if(Boolean(s_element_this_geolocation)) {
                    s_element_this_geolocation.innerHTML += " (latitude=" + position.coords.latitude + ", longitude=" + position.coords.longitude + ", " + "<a href=\"http://maps.googleapis.com/maps/api/staticmap?center=" + position.coords.latitude + "," + position.coords.longitude + "&zoom=13&size=1024x768&sensor=false\" target=\"_top\">View google-map</a>" + ")";
                }
            });
	}
*/

	getUserIP(function(ip) {
            var s_element_this_ip;
            s_element_this_ip = document.getElementById("d_hwport_local_ip");
            if(Boolean(s_element_this_ip)) {
                s_element_this_ip.innerHTML += " (Local IP is " + ip + ")";
            }
        });

	s_element_this.innerHTML = s_text;
    }

    s_element_this = document.getElementById("d_hwport_cpuusage_layer");
    if(Boolean(s_element_this)) {
        var s_timer = window.setInterval(
            function() {
                s_http_handle = hwport_http_request();
                if(Boolean(s_http_handle)) {
                    s_http_handle.onreadystatechange = function () {
                        if(s_http_handle.readyState != s_http_handle.DONE) { return false; }
                        if(!Boolean(s_http_handle.status)) { return false; }
                        if(((s_http_handle.status >= 200) && (s_http_handle.status < 300)) ||
                           (s_http_handle.status == 304) || (s_http_handle.status == 1223)) {
                            hwport_cputick_viewer(s_http_handle.responseText);
                        }
                    }
                    s_http_handle.open("GET", "/cgi-bin/cputick.cgi", true);
                    try { s_http_handle.send(null); } catch(e) { return; }
                }
            },
            1000
        );
    }
});
</script>
<!-- END: Javascript information -->
<!-- //
 
Copyright (C) JaeHyuk Cho <minzkn@minzkn.com>
All rights reserved.
  
http://www.minzkn.com/

// -->
</body>
</html>
